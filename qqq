[1mdiff --git a/app/classes/ReleaseInsights/Utils.php b/app/classes/ReleaseInsights/Utils.php[m
[1mindex 2cbb8b1..76af70d 100644[m
[1m--- a/app/classes/ReleaseInsights/Utils.php[m
[1m+++ b/app/classes/ReleaseInsights/Utils.php[m
[36m@@ -50,21 +50,14 @@[m [mclass Utils[m
         return self::secureText($date);[m
     }[m
 [m
[31m-    public static function getBuildID() : string[m
[32m+[m[32m    public static function getBuildID(string $buildid) : string[m
     {[m
[31m-        $fallback_buildid = '20191014213051';[m
[31m-[m
[31m-        // No buildid provided by the http call, return a default value[m
[31m-        if (!isset($_GET['buildid'])) {[m
[31m-            return $fallback_buildid;[m
[31m-        }[m
[31m-[m
         // Check that the string provided is correct[m
[31m-        if (!self::isBuildID($_GET['buildid'])) {[m
[31m-            return $fallback_buildid;[m
[32m+[m[32m        if (!self::isBuildID($buildid)) {[m
[32m+[m[32m            return '20191014213051'; // hardcoded fallback value[m
         }[m
 [m
[31m-        return self::secureText($_GET['buildid']);[m
[32m+[m[32m        return self::secureText($buildid);[m
 [m
     }[m
 [m
[1mdiff --git a/app/models/api_nightly_crashes.php b/app/models/api_nightly_crashes.php[m
[1mindex f6455bb..0fe46d0 100644[m
[1m--- a/app/models/api_nightly_crashes.php[m
[1m+++ b/app/models/api_nightly_crashes.php[m
[36m@@ -3,12 +3,7 @@[m [muse Cache\Cache;[m
 use Json\Json;[m
 Use ReleaseInsights\Utils as Utils;[m
 [m
[31m-// TODO: remove hardcoded value for buildid[m
[31m-$buildid = Utils::getBuildID();[m
[31m-[m
[31m-if (!Utils::isBuildID($buildid)) {[m
[31m-    return ['Error' => 'Invalid build ID'];[m
[31m-}[m
[32m+[m[32m$buildid = Utils::getBuildID($_GET['buildid']);[m
 [m
 $cache_id = 'https://crash-stats.mozilla.com/api/SuperSearch/?build_id=' . $buildid . '&_facets=signature';[m
 [m
