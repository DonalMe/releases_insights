s:7785:"{
"lastpushid": 3638,
"pushes": {"3628": {"changesets": [{"author": "Jamie Nicol \u003cjnicol@mozilla.com\u003e", "branch": "default", "desc": "Bug 1929209 - Replace switch statement in cs_svg_filter_node's fragment shader with if/else ifs.  a=dmeehan\n\ncs_svg_filter_node's fragment shader is effectively one giant switch\nstatement. Unfortunately the glsl-optimizer pass converts switch\nstatements in to a dreadful mess of if-elses, and the resulting shader\ntakes half a minute to compile on some Adreno devices.\n\nAs a short term fix, this patch replaces the switch statement with a\nseries of ifs and else ifs, which are much better than what the\noptimizer produces. While this should result in better code on all\nGPUs (minus a few where we do not use the optimized shaders), it will\nbe less efficient for SWGL. As a follow up we should fix the optimizer\nto produce better code for switch statements, then revert this change.\n\nOriginal Revision: https://phabricator.services.mozilla.com/D229310\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229349", "files": ["gfx/wr/webrender/res/cs_svg_filter_node.glsl"], "node": "b96cf77060aeba796829d8177c34115cd3ac917d", "parents": ["b3b71bd28ad558a6137aabe6e07d4d926fad0eb5"], "tags": []}], "date": 1731953713, "user": "dmeehan@mozilla.com"}, "3629": {"changesets": [{"author": "scottdowne \u003csdowne@mozilla.com\u003e", "branch": "default", "desc": "Bug 1931859 - Newtab ensure if Unified ads API is turned on and off, we keep the state and experience consistent.  a=dmeehan\n\nOriginal Revision: https://phabricator.services.mozilla.com/D229341\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229351", "files": ["browser/components/newtab/lib/TelemetryFeed.sys.mjs", "browser/components/newtab/lib/TopSitesFeed.sys.mjs"], "node": "24fce2fbde9596c27c0a5607a8f64614d3e884bf", "parents": ["b96cf77060aeba796829d8177c34115cd3ac917d"], "tags": ["FIREFOX-ANDROID_133_0_BUILD1", "FIREFOX_133_0_BUILD1"]}], "date": 1731953936, "user": "dmeehan@mozilla.com"}, "3630": {"changesets": [{"author": "Mozilla Releng Treescript \u003crelease+treescript@mozilla.org\u003e", "branch": "default", "desc": "No bug - Tagging 24fce2fbde9596c27c0a5607a8f64614d3e884bf with FIREFOX-ANDROID_133_0_BUILD1 a=release CLOSED TREE DONTBUILD", "files": [".hgtags"], "node": "c994891eb48aca54d9e939b579ce2fec6bf5accd", "parents": ["24fce2fbde9596c27c0a5607a8f64614d3e884bf"], "tags": []}], "date": 1731968986, "user": "ffxbld"}, "3631": {"changesets": [{"author": "Mozilla Releng Treescript \u003crelease+treescript@mozilla.org\u003e", "branch": "default", "desc": "No bug - Tagging 24fce2fbde9596c27c0a5607a8f64614d3e884bf with FIREFOX_133_0_BUILD1 a=release CLOSED TREE DONTBUILD", "files": [".hgtags"], "node": "6b89fcff2910fde44f8a9191ba5f1f468a355e04", "parents": ["c994891eb48aca54d9e939b579ce2fec6bf5accd"], "tags": []}], "date": 1731969469, "user": "ffxbld"}, "3632": {"changesets": [{"author": "ffxbld \u003cffxbld@mozilla.com\u003e", "branch": "default", "desc": "No Bug, mozilla-release repo-update remote-settings mobile-experiments -  a=dmeehan\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229749", "files": ["mobile/android/fenix/app/src/main/res/raw/initial_experiments.json", "services/settings/dumps/security-state/intermediates.json"], "node": "81251c58b18a95d9f723719a4e99895ba3803d2c", "parents": ["6b89fcff2910fde44f8a9191ba5f1f468a355e04"], "tags": []}], "date": 1732194744, "user": "dmeehan@mozilla.com"}, "3633": {"changesets": [{"author": "Mike Hommey \u003cmh+mozilla@glandium.org\u003e", "branch": "default", "desc": "Bug 1930836 - Initialize returned values in GetSelection{Start,End}IgnoringType.  a=dmeehan\n\nReturning uninitialized values is undefined behavior, and while the API\nis such that the caller code wouldn't use the value in the case it's not\ninitialized, the C++ standard doesn't allow it and now clang 19 has a\nchange in an optimization pass that can end up miscompiling the code as\nresult.\n\nOriginal Revision: https://phabricator.services.mozilla.com/D228769\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229691", "files": ["dom/html/HTMLInputElement.cpp"], "node": "7241213388fc73f8f36055ca8540b4127668c67a", "parents": ["81251c58b18a95d9f723719a4e99895ba3803d2c"], "tags": []}], "date": 1732195743, "user": "dmeehan@mozilla.com"}, "3634": {"changesets": [{"author": "Jan Varga \u003cjvarga@mozilla.com\u003e", "branch": "default", "desc": "Bug 1925418 - Fail GetOrCreateTemporaryOriginDirectory if origin is not initialized; r=dom-storage-reviewers,asuth, a=dmeehan\n\nThis is a temporary band-aid fix until the root cause of uninitialized origins\nafter obtaining a client directory lock via OpenClientDirectory is identified.\nThe issue might be caused by a race condition or a clear operation not returning\nthe origin string for resetting the origin initialization flag. To address this,\nwe not only fail GetOrCreateTemporaryOriginDirectory but also dispatch a\nrunnable to the PBackground thread to clear the flag. Any redundant clearing of\nthe flag should be harmless because the flag is solely used to avoid trigerring\nan origin initialization operation if the origin is already initialized. Any\nredundant operation  will call EnsureTemporaryOriginIsInitializedInternal, which\nsafely bails out early if the origin is already initialized on the QM I/O\nthread.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229385", "files": ["dom/quota/ActorsParent.cpp"], "node": "35b7989867d6ad53defb91fe91555600d151282e", "parents": ["7241213388fc73f8f36055ca8540b4127668c67a"], "tags": []}, {"author": "Andreas Farre \u003cfarre@mozilla.com\u003e", "branch": "default", "desc": "Bug 1931418 - Reduce the amount of recursion checks. r=dom-core,sefeng, a=dmeehan\n\nModify the frame recursion check to only happen when a load is triggered\nfrom a src or data attribute (depending on if it's an iframe, embed or\nan object element). This prevents recursion checks from blocking\nordinary navigations and navigations with a target.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229503", "files": ["docshell/base/nsDocShellLoadState.cpp", "docshell/base/nsDocShellLoadState.h", "dom/base/nsFrameLoader.cpp", "dom/base/nsFrameLoader.h", "dom/base/nsFrameLoaderOwner.cpp", "dom/base/nsObjectLoadingContent.cpp", "dom/html/nsGenericHTMLFrameElement.cpp", "dom/ipc/DOMTypes.ipdlh", "dom/xul/XULFrameElement.cpp", "netwerk/ipc/DocumentLoadListener.cpp"], "node": "c40934328d1c66b1321c25ed41401e1f8a378401", "parents": ["35b7989867d6ad53defb91fe91555600d151282e"], "tags": []}, {"author": "Andreas Farre \u003cfarre@mozilla.com\u003e", "branch": "default", "desc": "Bug 1931418 - Test that navigation isn't blocked due to recursive iframes. r=jjaschke, a=dmeehan\n\nDifferential Revision: https://phabricator.services.mozilla.com/D229586", "files": ["docshell/test/navigation/frame_recursive_target.html", "docshell/test/navigation/mochitest.toml", "docshell/test/navigation/test_recursive_frames.html"], "node": "69b898f88244cbdb2ac8b8c47d0c46a59782f916", "parents": ["c40934328d1c66b1321c25ed41401e1f8a378401"], "tags": []}, {"author": "donal meehan \u003cdmeehan@mozilla.com\u003e", "branch": "default", "desc": "Backed out 1 changesets (bug 1914596) on request for causing Bug 1927838\n\nBacked out changeset a4bbf81aefbb (bug 1914596)", "files": ["modules/libpref/init/StaticPrefList.yaml"], "node": "8141aab3ba856d7cbae6c851dd71f2e0cb69649c", "parents": ["69b898f88244cbdb2ac8b8c47d0c46a59782f916"], "tags": ["FIREFOX-ANDROID_133_0_BUILD2", "FIREFOX-ANDROID_133_0_RELEASE", "FIREFOX_133_0_BUILD2", "FIREFOX_133_0_RELEASE"]}], "date": 1732197925, "user": "dmeehan@mozilla.com"}}
}";