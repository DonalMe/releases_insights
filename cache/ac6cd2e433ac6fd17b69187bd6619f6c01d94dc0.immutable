s:32423:"{
"lastpushid": 2842,
"pushes": {"1619": {"changesets": [{"author": "EKR \u003cekr@rtfm.com\u003e", "branch": "default", "desc": "Bug 1429853 - Disable TLS 1.3 by default for Release 58. r=keeler, a=jcristau", "files": ["security/manager/ssl/nsNSSComponent.cpp", "security/manager/ssl/security-prefs.js"], "node": "bae02089efa48f7f2e75b9dc88076db05b6aca82", "parents": ["882ca853e05ae1bd978ac39726c66daaecadad76"], "tags": []}, {"author": "Randell Jesup \u003crjesup@jesup.org\u003e", "branch": "default", "desc": "Bug 1429219 - Ensure VP8 simulcast with temporal layers won't fail if there aren't enough bits. r=drno, a=gchang", "files": ["media/webrtc/signaling/src/media-conduit/VideoConduit.cpp", "media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/vp8_impl.cc"], "node": "d4eaca183f2fdb910ce7e67f9039e9cb27b377fc", "parents": ["bae02089efa48f7f2e75b9dc88076db05b6aca82"], "tags": []}, {"author": "Michael Froman \u003cmfroman@mozilla.com\u003e", "branch": "default", "desc": "Bug 1425780 - Don't allow queue-jumping for gathering state change events. r=bwc, a=abillings", "files": ["media/webrtc/signaling/src/peerconnection/PeerConnectionImpl.cpp"], "node": "01c8d651c3513eb1ecc9bd963be560bdc351b518", "parents": ["d4eaca183f2fdb910ce7e67f9039e9cb27b377fc"], "tags": []}], "date": 1515724887, "user": "ryanvm@gmail.com"}, "1620": {"changesets": [{"author": "Matt Woodrow \u003cmwoodrow@mozilla.com\u003e", "branch": "default", "desc": "Bug 1261175. r=bobowen a=gchang\n\nMozReview-Commit-ID: B9yAN0F01rj", "files": ["layout/base/nsDocumentViewer.cpp"], "node": "75912c7725910ed540e53348c4620add73f36000", "parents": ["01c8d651c3513eb1ecc9bd963be560bdc351b518"], "tags": []}, {"author": "Kartikaya Gupta \u003ckgupta@mozilla.com\u003e", "branch": "default", "desc": "Bug 1387340 - Ensure popup windows spawned on non-primary windows get a correct scale. r=jfkthame a=jcristau", "files": ["widget/windows/nsWindow.cpp"], "node": "fd110250bcd776577d5e7694d322fda23b485ed3", "parents": ["75912c7725910ed540e53348c4620add73f36000"], "tags": []}, {"author": "Samael Wang \u003cfreesamael@gmail.com\u003e", "branch": "default", "desc": "Bug 1416878 - Move the implementation of nsIWidgetListener from nsWebBrowser / nsWebShellWindow to a separate object. r=bz a=gchang\n\nMozReview-Commit-ID: 5QV6lkCCGW5", "files": ["toolkit/components/browser/nsWebBrowser.cpp", "toolkit/components/browser/nsWebBrowser.h", "xpfe/appshell/nsWebShellWindow.cpp", "xpfe/appshell/nsWebShellWindow.h"], "node": "3caec21cf4f622aa56a37aa6316800cf55bef13b", "parents": ["fd110250bcd776577d5e7694d322fda23b485ed3"], "tags": []}, {"author": "Dragana Damjanovic \u003cdd.mozilla@gmail.com\u003e", "branch": "default", "desc": "Bug 1417431 - secureConnectionStart should be 0 for pages with HTTP scheme. r=bkelly a=gchang", "files": ["dom/performance/PerformanceTiming.cpp", "dom/performance/PerformanceTiming.h", "dom/performance/tests/test_performance_user_timing.js"], "node": "494218c56c7eb448d61c1c803342881f27686ca7", "parents": ["3caec21cf4f622aa56a37aa6316800cf55bef13b"], "tags": []}, {"author": "Tom Ritter \u003ctom@mozilla.com\u003e", "branch": "default", "desc": "Bug 1417741 Add support of Atomic\u003c\u003e for Preferences::Add*VarCache r=baku,njn a=gchang\n\nThis is a partial backport of Bug 1417741 that only adds AddAtomicBoolVarCache\nbecause that is all we need.", "files": ["modules/libpref/Preferences.cpp", "modules/libpref/Preferences.h", "modules/libpref/test/gtest/CallbackAndVarCacheOrder.cpp"], "node": "3ebefc043ac67bc941f8e74182d3ba8fdc9419f4", "parents": ["494218c56c7eb448d61c1c803342881f27686ca7"], "tags": []}], "date": 1515788237, "user": "archaeopteryx@coole-files.de"}, "1621": {"changesets": [{"author": "Jason Orendorff \u003cjorendorff@mozilla.com\u003e", "branch": "default", "desc": "Bug 1426783 - Fix error handling in deserialization of invalid typed arrays. r=sfink, a=gchang.", "files": ["js/src/vm/StructuredClone.cpp"], "node": "d70260efa9014713bccb0f8a42b954ff352c7d45", "parents": ["3ebefc043ac67bc941f8e74182d3ba8fdc9419f4"], "tags": []}, {"author": "Jason Orendorff \u003cjorendorff@mozilla.com\u003e", "branch": "default", "desc": "Bug 1425612 - Better error messages for invalid structured clone data. r=sfink, a=gchang.", "files": ["js/src/vm/StructuredClone.cpp"], "node": "f4256fe890db1e8d88f4bfea958e419f5ee88b75", "parents": ["d70260efa9014713bccb0f8a42b954ff352c7d45"], "tags": []}], "date": 1515790831, "user": "jorendorff@mozilla.com"}, "1622": {"changesets": [{"author": "Andrea Marchesini \u003camarchesini@mozilla.com\u003e", "branch": "default", "desc": "Bug 1425509 - Initialize PerformanceService in RuntimeService, r=bkelly a=gchang", "files": ["dom/workers/RuntimeService.cpp"], "node": "f2c70b72815832065e939a921adc1d6a3f557f51", "parents": ["f4256fe890db1e8d88f4bfea958e419f5ee88b75"], "tags": []}, {"author": "Kearwood \"Kip\" Gilbert \u003ckgilbert@mozilla.com\u003e", "branch": "default", "desc": "Bug 1426500 - Disable WebVR for macOS on Beta and Release r=daoshengmu a=gchang\n- WebVR will continue to be enabled on macOS for Nightly\n  and Dev Edition\n\nMozReview-Commit-ID: LpEX13yZVbb", "files": ["modules/libpref/init/all.js"], "node": "ace563efaa9917538660c474ab5b261fd4f0132e", "parents": ["f2c70b72815832065e939a921adc1d6a3f557f51"], "tags": []}, {"author": "Kearwood \"Kip\" Gilbert \u003ckgilbert@mozilla.com\u003e", "branch": "default", "desc": "Bug 1426500 - Part 2: Update test_interfaces mochitest to expect WebVR interfaces to be disabled on release builds for macOS. r=smaug, a=gchang", "files": ["dom/tests/mochitest/general/test_interfaces.js"], "node": "1f97fc614f9ea844d2e9cc8dc5e869cffee86913", "parents": ["ace563efaa9917538660c474ab5b261fd4f0132e"], "tags": []}, {"author": "Haik Aftandilian \u003chaftandilian@mozilla.com\u003e", "branch": "default", "desc": "Bug 1429133 - Some FontExplorer managed fonts are not rendered. r=Alex_Gaynor a=gchang\n\nMozReview-Commit-ID: L5x3GNb3HGU", "files": ["security/sandbox/mac/SandboxPolicies.h"], "node": "848733c4f4dee8747d1f1d6b388e4dcf7099099f", "parents": ["1f97fc614f9ea844d2e9cc8dc5e869cffee86913"], "tags": []}, {"author": "Tom Ritter \u003ctom@mozilla.com\u003e", "branch": "default", "desc": "Bug 1424341 Add privacy.reduceTimerPrecision and privacy.reduceTimerPrecision.microseconds prefs and tests r=bkelly,timhuang,mrbkap a=gchang\n\nThis pref does not override privacy.resistFingerprinting, but when it is set (and\nprivacy.resistFingerprinting is not) we will still adjust the precision of almost\nall timers. The adjustment amount is the second pref, which is defaulted to\n20us but now dynamically adjustable (in the scale of microseconds.)\n\nWe are landing this preffed off at the current value we clamp performance.now() at\nwhich is 20us.\n\nThis commit is the combination of the multiple commits listed in Bug 1424341", "files": ["browser/app/profile/firefox.js", "browser/components/resistfingerprinting/test/browser/browser_performanceAPI.js", "browser/components/resistfingerprinting/test/browser/file_workerPerformance.js", "browser/components/resistfingerprinting/test/mochitest/file_animation_api.html", "browser/components/resistfingerprinting/test/mochitest/test_animation_api.html", "browser/components/resistfingerprinting/test/mochitest/test_reduce_time_precision.html", "dom/animation/test/css-transitions/test_animation-starttime.html", "dom/animation/test/document-timeline/test_document-timeline.html", "dom/ipc/ContentPrefs.cpp", "dom/media/test/test_streams_element_capture.html", "dom/media/test/test_streams_element_capture_createObjectURL.html", "dom/media/test/test_video_stats_resistfingerprinting.html", "dom/performance/Performance.cpp", "dom/performance/PerformanceNavigationTiming.h", "dom/performance/PerformanceTiming.cpp", "dom/performance/PerformanceTiming.h", "modules/libpref/Preferences.cpp", "modules/libpref/init/all.js", "modules/libpref/test/gtest/CallbackAndVarCacheOrder.cpp", "testing/web-platform/meta/dom/events/__dir__.ini", "testing/web-platform/meta/server-timing/__dir__.ini", "testing/web-platform/meta/web-animations/timing-model/animations/__dir__.ini", "testing/web-platform/meta/web-animations/timing-model/timelines/__dir__.ini", "testing/web-platform/meta/webaudio/the-audio-api/__dir__.ini", "toolkit/components/resistfingerprinting/nsRFPService.cpp", "toolkit/components/resistfingerprinting/nsRFPService.h"], "node": "f3d0dfafa490db5c8b700ef8d16cc97dc28d7901", "parents": ["848733c4f4dee8747d1f1d6b388e4dcf7099099f"], "tags": []}], "date": 1515802139, "user": "archaeopteryx@coole-files.de"}, "1623": {"changesets": [{"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 1: DivertComplete should only be sent at OnStopRequest for synthesized responses. r=bkelly a=gchang\n\nDiversion for intercepted channels with a synthesized response is a\nspecial case.  It is not appropriate to send DivertComplete when\nmEventQ has been drained, because we are not dealing with the usual\nmEventQ-enqueued OnDataAvailable payloads that had been received over\nthe network and sent down to the child.  In this case, all the data\noriginates in the child and does not go through mEventQ.  As such,\nthe correct place to send DivertComplete is at OnStopComplete for the\nsynthesized response.", "files": ["netwerk/protocol/http/HttpChannelChild.cpp"], "node": "b855bb9f21232d7291b2256e1a275259c4ee4577", "parents": ["f3d0dfafa490db5c8b700ef8d16cc97dc28d7901"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 2: Allow for diversion cancellation and trigger for intercepted channels. r=bkelly, r=mayhemer a=gchang\n\nThe diversion mechanism never expected to be dealing with data sourced\nfrom the content process, but that's exactly what happens with\nServiceWorker-intercepted channels with the current child-intercept\nsituation (which is being fixed).\n\nIn order to allow timely cancellation of diverted intercepted\nchannels, there needs to be a way to relay to the HttpChannelChild\nthat it needs to be canceled so that the synthesized pump can be\ncanceled and diversion can be marked as complete.  This patch adds\nsuch a mechanism to ADivertableParentChannel and PHttpChannel for the\nexclusive use of InterceptedHttpChannel and then uses it.", "files": ["netwerk/base/ADivertableParentChannel.h", "netwerk/protocol/ftp/FTPChannelParent.cpp", "netwerk/protocol/ftp/FTPChannelParent.h", "netwerk/protocol/http/HttpChannelChild.cpp", "netwerk/protocol/http/HttpChannelChild.h", "netwerk/protocol/http/HttpChannelParent.cpp", "netwerk/protocol/http/HttpChannelParent.h", "netwerk/protocol/http/InterceptedHttpChannel.cpp", "netwerk/protocol/http/InterceptedHttpChannel.h", "netwerk/protocol/http/PHttpChannel.ipdl"], "node": "721cbc4debf789ebe92960e0c96615401125c2d7", "parents": ["b855bb9f21232d7291b2256e1a275259c4ee4577"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 3: (Also Bug 1418795) SyntheticDiversionListener should handle !mIPCOpen. r=bkelly a=gchang\n\nThe SyntheticDiversionListener needs to handle the case where the IPC\nconnection is gone.  This patch avoids calling Send* methods which will\ncrash the content process if the actor has already been destroyed.\nAdditionally, OnDataAvailable will return an error in such a case so\nthat the caller can properly handle the error rather than continuing to\nattempt to send data to a listener that doesn't care.  This latter\nchange is an artifact of a previous hack attempt to fix a related\ndiversion issue that is probably not required for this stack, but makes\nsense as a fix, so I've left it in.", "files": ["netwerk/protocol/http/HttpChannelChild.cpp", "netwerk/protocol/http/HttpChannelChild.h"], "node": "0c95b7733c659823ab34ad34469fc9bbdad0d0e4", "parents": ["721cbc4debf789ebe92960e0c96615401125c2d7"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 4: FetchDriver needs to propagate write failures. r=baku a=gchang\n\nIn the scenario where a ServiceWorker returns a pass-through fetch via\n`evt.respondWith(fetch(\"underlying\"))`, in order for the \"underlying\"\nHTTP channel to be canceled when the outer HTTP channel is canceled,\nFetchDriver's OnDataAvailable method needs to return an error when\nthe output pipe experiences an error.\n\nUnfortunately, the contract for ReadSegments is effectively that it\nreturns NS_OK regardless of what the rv of the write handler returned,\nso relying on the returned rv is insufficient.  And because various\nWrite*() methods will all fast-path to returning NS_OK if a count of 0\nis passed, it's necessary to infer a closed/broken pipe by noticing\nthat we tried to write more than 0 bytes of data but 0 bytes were\nwritten.  (This is safe because the pipe we write into was created\nby FetchDriver::OnStartRequest which explicitly creates an infinite\npipe, so it's not possible for the write to fail due to lack of space\nin the pipe.)", "files": ["dom/fetch/FetchDriver.cpp"], "node": "8c317ab88b7661c41516747a0d6569c36706921b", "parents": ["0c95b7733c659823ab34ad34469fc9bbdad0d0e4"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 5: FetchStreamReader needs to cancel its reader when it encounters write errors. r=baku, f=bkelly a=gchang\n\nCurrently, FetchStreamReader never signals to the JS stream code that\nthe reader has been closed.  This means that when a ServiceWorker\npasses a ReadableStream to respondWith and the HTTP Channel gets\ncanceled, the JS code will keep generating the stream without ever\nrealizing the data's not going anywhere.  It's necessary to cancel\nthe reader.  Or do something like that, this seems to work!", "files": ["dom/fetch/FetchStreamReader.cpp", "dom/fetch/FetchStreamReader.h"], "node": "4e914143668dc37aea74225b3b2c3c1436a06f28", "parents": ["8c317ab88b7661c41516747a0d6569c36706921b"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 6: Test cancellation of diverted client-intercepted streams. r=bkelly a=gchang\n\nThis adds a test where we have a ServiceWorker return 2 different types\nof streams that Firefox recognizes as downloads which are handled by\ndiversion of the channel to the parent.  The diverted downloads are\nthen cancelled and we verify that cancellation actually results in the\nunderlying connections being closed and/or the ServiceWorker notified.\n\nOur 2 types of streams are:\n1. A pass-through stream that is incrementally delivered through use of\n   an .sjs file that delivers data using setInterval.\n2. A SW-authored ReadableStream (which is not enabled by default, so we\n   set a pref.)\n\nDetermining when the .sjs's stream is canceled is accomplished by\nopening a second \"monitor\" connection that only completes when the\nstreaming connection is closed.\n\nIn all cases we differentiate between cancelation and timeouts firing.", "files": ["dom/workers/test/serviceworkers/browser.ini", "dom/workers/test/serviceworkers/browser_download_canceled.js", "dom/workers/test/serviceworkers/download_canceled/page_download_canceled.html", "dom/workers/test/serviceworkers/download_canceled/server-stream-download.sjs", "dom/workers/test/serviceworkers/download_canceled/sw_download_canceled.js"], "node": "7db765b809466c034cec79439f3c5f03ee0fc516", "parents": ["4e914143668dc37aea74225b3b2c3c1436a06f28"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 0a: Make browser_force_refresh.js clean up after itself. r=bkelly a=gchang", "files": ["dom/workers/test/serviceworkers/browser_force_refresh.js"], "node": "c77831e4963620a76663c9b23cc12c496fb4f651", "parents": ["7db765b809466c034cec79439f3c5f03ee0fc516"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 0b: browser_multie10s_update.js needs to protect its invariants, clean-up after itself. r=bkelly a=gchang", "files": ["dom/workers/test/serviceworkers/browser_multie10s_update.js"], "node": "3196b9ada4f4a2581d6b68511d71f9067dc3117f", "parents": ["c77831e4963620a76663c9b23cc12c496fb4f651"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 0c: browser_multie10s_update.js should not use setTimeout. r=bkelly a=gchang\n\nThis test used a fixed setTimeout of 3secs for serving the SW.  This\nlower-bounded the test runtime at 6 seconds, plus it was not safe in\nthe event of a slow test runner.\n\nThis set of changes, although a little ugly, improves the logic so that\nthe SW's transmission is driven by a separate \"release\" fetch that is\nonly triggered when both updates have been issued and the first update\nfailure has been reported.  This ensures we are observing the desired\nsituation.  There's also a sanity check on the number of times the SW\nscript is fetched.", "files": ["dom/workers/test/serviceworkers/browser_multie10s_update.js", "dom/workers/test/serviceworkers/file_multie10s_update.html", "dom/workers/test/serviceworkers/server_multie10s_update.sjs"], "node": "53c59a717ff04053ea958dd7a752281ec01b291b", "parents": ["3196b9ada4f4a2581d6b68511d71f9067dc3117f"], "tags": []}, {"author": "Andrew Sutherland \u003casutherland@asutherland.org\u003e", "branch": "default", "desc": "Bug 1416879 - Part 0d: Move browser_multie10s_update.js into its own directory. r=bkelly a=gchang\n\nThis test is unfortunately a victim of a multi-e10s unregister() race\nfrom browser_force_refresh and given the imminent multi-e10s cleanup\nthat's going to happen, the more complicated alternatives aren't worth\nthe effort versus just moving this test to its own directory.\n\n..and now it's disabled too.  Bug 1429794 tracks re-enabling.", "files": ["dom/workers/moz.build", "dom/workers/test/serviceworkers/browser.ini", "dom/workers/test/serviceworkers/browser_multie10s_update.js", "dom/workers/test/serviceworkers/file_multie10s_update.html", "dom/workers/test/serviceworkers/isolated/README.md", "dom/workers/test/serviceworkers/isolated/multi-e10s-update/browser.ini", "dom/workers/test/serviceworkers/isolated/multi-e10s-update/browser_multie10s_update.js", "dom/workers/test/serviceworkers/isolated/multi-e10s-update/file_multie10s_update.html", "dom/workers/test/serviceworkers/isolated/multi-e10s-update/server_multie10s_update.sjs", "dom/workers/test/serviceworkers/server_multie10s_update.sjs"], "node": "dd18bd878644487d20fc5358d2fd924e1dda0825", "parents": ["53c59a717ff04053ea958dd7a752281ec01b291b"], "tags": []}, {"author": "Michael Kaply \u003cmozilla@kaply.com\u003e", "branch": "default", "desc": "Bug 1426081 - Migrate legacy search engines to WebExtensions. r=florian a=gchang\n\nMozReview-Commit-ID: JfSwJwMC46F", "files": ["toolkit/components/search/nsSearchService.js", "toolkit/components/search/tests/xpcshell/test_migrateWebExtensionEngine.js", "toolkit/components/search/tests/xpcshell/xpcshell.ini"], "node": "e47207b8927fc7ae26a77e6a6bb57f258b516946", "parents": ["dd18bd878644487d20fc5358d2fd924e1dda0825"], "tags": []}, {"author": "Mats Palmgren \u003cmats@mozilla.com\u003e", "branch": "default", "desc": "Bug 1427221 - Do nsMathMLmfencedFrame cleanup in DestroyFrom, not in the dtor.  r=mattwoodrow a=gchang", "files": ["layout/generic/nsFrame.cpp", "layout/mathml/nsMathMLmfencedFrame.cpp", "layout/mathml/nsMathMLmfencedFrame.h"], "node": "ae6c87e225d3820393a4b727be87a5a837205d72", "parents": ["e47207b8927fc7ae26a77e6a6bb57f258b516946"], "tags": []}, {"author": "Dragana Damjanovic dd.mozilla@gmail.com", "branch": "default", "desc": "Bug 1429859 - Check mDoNotTryEarlyData in Do0RTT(). r=mcmanus a=gchang", "files": ["netwerk/protocol/http/nsHttpTransaction.cpp"], "node": "f99b1d9d900687eeb166ec6ddcb50fd005d85513", "parents": ["ae6c87e225d3820393a4b727be87a5a837205d72"], "tags": []}, {"author": "Tom Ritter \u003ctom@mozilla.com\u003e", "branch": "default", "desc": "Bug 1429885 Support a rounding value of 0 for reduceTimerPrecision r=bkelly,timhuang a=gchang\n\nMozReview-Commit-ID: F96EUfXgK9F", "files": ["toolkit/components/resistfingerprinting/nsRFPService.cpp", "toolkit/components/resistfingerprinting/nsRFPService.h"], "node": "4c230b89e05e6a4d87d3f26e2ca862dd59e617d0", "parents": ["f99b1d9d900687eeb166ec6ddcb50fd005d85513"], "tags": []}], "date": 1516008799, "user": "archaeopteryx@coole-files.de"}, "1624": {"changesets": [{"author": "Matt Woodrow \u003cmwoodrow@mozilla.com\u003e", "branch": "default", "desc": "Bug 1421345 - Check the canary during allocations. r=jet a=gchang", "files": ["xpcom/ds/ArenaAllocator.h"], "node": "814254bd1eb76533621eea0700d0182aa3121350", "parents": ["4c230b89e05e6a4d87d3f26e2ca862dd59e617d0"], "tags": []}], "date": 1516016372, "user": "archaeopteryx@coole-files.de"}, "1625": {"changesets": [{"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e", "branch": "default", "desc": "Backed out changeset 814254bd1eb7 (bug 1421345) for bustage at dist/include/mozilla/ArenaAllocator.h:180:7: 'canary' was not declared in this scope. a=backout", "files": ["xpcom/ds/ArenaAllocator.h"], "node": "fae7c41d40fd8ddb4d6d0ade34af7c75fef0e4d5", "parents": ["814254bd1eb76533621eea0700d0182aa3121350"], "tags": []}], "date": 1516017815, "user": "archaeopteryx@coole-files.de"}, "1626": {"changesets": [{"author": "Luke Chang \u003clchang@mozilla.com\u003e", "branch": "default", "desc": "Bug 1430522 - [Form Autofill] Enable address autofill by default on release build. r=seanlee a=gchang\n\nMozReview-Commit-ID: 9Pf8l7PqSMi", "files": ["browser/app/profile/firefox.js"], "node": "5096a6c3aefd858af15facdd31b53d8f57baf061", "parents": ["fae7c41d40fd8ddb4d6d0ade34af7c75fef0e4d5"], "tags": []}, {"author": "Shih-Chiang Chien \u003cschien@mozilla.com\u003e", "branch": "default", "desc": "Bug 1401459 - always run HttpChannelChild::Release on main thread. r=mayhemer a=gchang", "files": ["netwerk/protocol/http/HttpChannelChild.cpp"], "node": "aba167b6e63f27f9b10ce8805b4e02d8b0a79035", "parents": ["5096a6c3aefd858af15facdd31b53d8f57baf061"], "tags": []}, {"author": "Matt Woodrow \u003cmwoodrow@mozilla.com\u003e", "branch": "default", "desc": "Bug 1421345 - Check the canary during allocations. r=jet a=gchang", "files": ["xpcom/ds/ArenaAllocator.h"], "node": "7151850b2933e3ae6e41435461545db63b6591c9", "parents": ["aba167b6e63f27f9b10ce8805b4e02d8b0a79035"], "tags": []}, {"author": "Karl Tomlinson \u003ckarlt+@karlt.net\u003e", "branch": "default", "desc": "bug 1429666 cubeb_resampler_speex: don't call data callback while draining r=padenot a=gchang\n\nMozReview-Commit-ID: 1XEzZjPGai9", "files": ["media/libcubeb/README_MOZILLA", "media/libcubeb/gtest/test_resampler.cpp", "media/libcubeb/src/cubeb_resampler.cpp", "media/libcubeb/src/cubeb_resampler_internal.h"], "node": "571ae115f2de6aedeb1de20a80a81b4067219921", "parents": ["7151850b2933e3ae6e41435461545db63b6591c9"], "tags": []}], "date": 1516185712, "user": "archaeopteryx@coole-files.de"}, "1627": {"changesets": [{"author": "Sebastian Hengst \u003carchaeopteryx@coole-files.de\u003e", "branch": "default", "desc": "Backed out changeset 7151850b2933 (bug 1421345) - dependency bug 1406727 hasn't been uplifted yet. a=backout", "files": ["xpcom/ds/ArenaAllocator.h"], "node": "9373b4bc3dd7a187baf7da6f26cd8050e7c2e231", "parents": ["571ae115f2de6aedeb1de20a80a81b4067219921"], "tags": []}], "date": 1516190119, "user": "archaeopteryx@coole-files.de"}, "1628": {"changesets": [{"author": "Boris Zbarsky \u003cbzbarsky@mit.edu\u003e", "branch": "default", "desc": "Bug 1431282.  Work around layout violating its own invariants and causing stylo code to crash, _again_.  r=emilio, a=gchang\n\nMozReview-Commit-ID: 3ggJI0qmOJV", "files": ["layout/generic/nsInlineFrame.cpp"], "node": "04728698613cacf16253dd7fabf22f596c5b6044", "parents": ["9373b4bc3dd7a187baf7da6f26cd8050e7c2e231"], "tags": []}], "date": 1516245989, "user": "bzbarsky@mozilla.com"}, "1629": {"changesets": [{"author": "Tom Ritter \u003ctom@mozilla.com\u003e", "branch": "default", "desc": "Bug 1429668 - Turn off the reduceTimerPrecision pref for one more test. r=hiro, a=test-only\n\nMozReview-Commit-ID: J7F502Oz3Uc", "files": ["dom/animation/test/css-animations/test_animation-starttime.html"], "node": "20e64779a662217b6d43df9d60ec120ceadc977d", "parents": ["04728698613cacf16253dd7fabf22f596c5b6044"], "tags": []}, {"author": "Dustin J. Mitchell \u003cdustin@mozilla.com\u003e", "branch": "default", "desc": "Bug 1407163 - Raise exceptions with HTTP error info. r=glandium, a=test-only\n\nMozReview-Commit-ID: B3MvsZDpj9a", "files": ["python/mozbuild/mozbuild/mach_commands.py"], "node": "9942e1807fd52a46db5c56c4c81ec607f10423bf", "parents": ["20e64779a662217b6d43df9d60ec120ceadc977d"], "tags": []}, {"author": "Tim Nguyen \u003cntim.bugs@gmail.com\u003e", "branch": "default", "desc": "Bug 1413089 - Fix intermittent browser_ext_themes_dynamic_getCurrent.js. r=mixedpuppy, a=test-only\n\nMozReview-Commit-ID: MylrmgEfz9", "files": ["toolkit/components/extensions/test/browser/browser_ext_themes_dynamic_getCurrent.js"], "node": "987fba771fbf2640f34f760118b2cbc285416fc3", "parents": ["9942e1807fd52a46db5c56c4c81ec607f10423bf"], "tags": []}, {"author": "Rob Wood \u003crwood@mozilla.com\u003e", "branch": "default", "desc": "Bug 1428790 - Disable talos heavy user profile tests on windows and linux. r=jmaher, a=test-only\n\nMozReview-Commit-ID: DppwZi5tGNx", "files": ["taskcluster/ci/test/talos.yml"], "node": "a3c6c687eba1a415d48ac6bb4aaf7bcb195945e5", "parents": ["987fba771fbf2640f34f760118b2cbc285416fc3"], "tags": []}, {"author": "David Anderson \u003cdanderson@mozilla.com\u003e", "branch": "default", "desc": "Bug 1419264 - Block Advanced Layers on the latest Windows 7 NVIDIA drivers. r=milan, a=jcristau", "files": ["widget/windows/GfxInfo.cpp"], "node": "ec621584ec3a6550303b85fe5ea975d6676bf256", "parents": ["a3c6c687eba1a415d48ac6bb4aaf7bcb195945e5"], "tags": []}, {"author": "Kris Maglione \u003cmaglione.k@gmail.com\u003e", "branch": "default", "desc": "Bug 1430508 - Return 0 for ProcessId() when channel IPC is closed. r=dragana, a=jcristau\n\nThere are some corner cases where we try to attach StreamFilter endpoints to a\nchannel after its IPC has been closed from from the other side, but request\nlisteners haven't been notified. This causes crashes in any of several places.\n\nThis patch changes nsHttpChannel::ProcessId to return 0 when IPC is closed, so\ncallers can detect that it's no longer possible to attach endpoints to it.\n\nMozReview-Commit-ID: BZTOqezih0P", "files": ["netwerk/protocol/http/HttpChannelParent.cpp", "netwerk/protocol/http/HttpChannelParent.h", "toolkit/components/extensions/webrequest/StreamFilterParent.cpp"], "node": "86ba26a98381e474145f646b54ba2a84321a6233", "parents": ["ec621584ec3a6550303b85fe5ea975d6676bf256"], "tags": []}, {"author": "Tom Ritter \u003ctom@mozilla.com\u003e", "branch": "default", "desc": "Bug 1429764 - Do not call ReduceTimerPrecision twice for DOM Navigation timers. r=bkelly, r=timhuang, a=jcristau\n\nBug 1429764 details a test failure that was asserting that the performance navigation\ntimers were strictly increasing (or equal). fetchStart should have a timestamp before\ndomainLookupStart.  But it didn't.\n\nThe problem is two-fold.  This corrects the test and the issue by addressing one part\nof the problem, the second part of the problem needs to be written up in a new bug\nand addressed there. (That bug is not yet filed at writing, but see dependencies of\n1429764 in the future to find it.)\n\nThe second, and underlying, problem is that calling ReduceTimerPrecision with the\nsame value multiple times may continually reduce it. Meaning that the first you call\nit with, say, .75, (and a precision of .20), it will be reduced to .6. The second time\nyou call it (with .6), instead of staying at .6 it will be reduced to .4. This is\nbecause floats are fuzzy. Inside ReduceTimerPrecision we are multiplying a decimal by\na decimal, so while floor(.6 / .20)  should equal 3, sometimes it's actually 2.999...\nwhich gets floors to 2, gets multiplied again by .2, and which results in .4\n\nIf that's the underlying problem, the first, and surface, problem is - why are we\ncalling ReduceTimerPrecision multiple times? We shouldn't be. That's what this\npatch fixes.\n\nTimeStampToDOMHighResOrFetchStart will return either TimeStampToDOMHighRes() or\nFetchStartHighRes(). FetchStartHighRes() internally calls TimeStampToDOMHighRes\nand then ReduceTimerPrecision - this is where (some of) the two reduction calls\nhappen - because TimeStampToDOMHighRes itself calls ReduceTimerPrecision also.\n\nI remove the ReduceTimerPrecision from TimeStampToDOMHighRes. FetchStartHighRes\nwill now only call ReduceTimerPrecision once, at the end of the return.\n\nBut we have to fix places we call TimeStampToDOMHighResOrFetchStart, because the\ncallers of that function also call ReduceTimerPrecision. So if\nTimeStampToDOMHighResOrFetchStart returned FetchStartHighRes, we'd be calling\nReduceTimerPrecision twice for those callers.\n\nSo inside first off, we remove the outer call to ReduceTimerPrecision. that\nsurrounds the 5 or so callsites of TimeStampToDOMHighResOrFetchStart. Then\ninside of TimeStampToDOMHighResOrFetchStart we return either FetchStartHighRes\n(which is has already called ReduceTimerPrecision) or we call\nReduceTimerPrecision with the value.\n\nNow. TimeStampToDOMHighRes was used in more places than just FetchStartHighRes -\nthere were several other places where we were doing double rounding, and this\nfixed those as well. AsyncOpenHighRes, WorkerStartHighRes, DomainLookupEndHighRes,\nConnectStartHighRes, SecureConnectionStartHighRes, ConnectEndHighRes, and\nResponseEndHighRes.\n\nMozReview-Commit-ID: K5nHql135rb", "files": ["dom/performance/PerformanceTiming.cpp", "dom/performance/PerformanceTiming.h", "toolkit/components/resistfingerprinting/nsRFPService.cpp"], "node": "ff6f39465890eabd327328f5c7d80fb1f9917649", "parents": ["86ba26a98381e474145f646b54ba2a84321a6233"], "tags": []}], "date": 1516285679, "user": "ryanvm@gmail.com"}, "1630": {"changesets": [{"author": "Simon Fraser \u003csfraser@mozilla.com\u003e", "branch": "default", "desc": "Bug 1431381 - Pin all funsize dependency versions. r=callek, a=release\n\nMozReview-Commit-ID: 53RUUw4gVDJ", "files": ["taskcluster/docker/funsize-update-generator/requirements.txt"], "node": "d304791fc530e1350e81b719c17f167f3ab0384b", "parents": ["ff6f39465890eabd327328f5c7d80fb1f9917649"], "tags": []}], "date": 1516299045, "user": "ryanvm@gmail.com"}, "1631": {"changesets": [{"author": "Ryan VanderMeulen \u003cryanvm@gmail.com\u003e", "branch": "default", "desc": "Bug 1431381 - Only pin the construct version for the funsize update generator. r=callek, a=release", "files": ["taskcluster/docker/funsize-update-generator/requirements.txt"], "node": "7f387e81a4a055d39f30913dc9995107b5e0925b", "parents": ["d304791fc530e1350e81b719c17f167f3ab0384b"], "tags": []}], "date": 1516302564, "user": "ryanvm@gmail.com"}, "1632": {"changesets": [{"author": "Rail Aliiev \u003crail@mozilla.com\u003e", "branch": "default", "desc": "Bug 1420469 - Action task routes use literal \"$ownTaskId\". r=bstack, a=release\n\nMozReview-Commit-ID: CsCtSpvDIip", "files": [".taskcluster.yml"], "node": "1186e4f737ee4e991864fedbe5345e13dd41819f", "parents": ["7f387e81a4a055d39f30913dc9995107b5e0925b"], "tags": ["FENNEC_58_0_BUILD2", "FENNEC_58_0_RELEASE"]}], "date": 1516308151, "user": "ryanvm@gmail.com"}, "1633": {"changesets": [{"author": "Ryan VanderMeulen \u003cryanvm@gmail.com\u003e", "branch": "default", "desc": "Bug 1431381 - Pin the version of construct in the funsize balrog submitter too. r=callek, a=bustage", "files": ["taskcluster/docker/funsize-balrog-submitter/requirements.txt"], "node": "40755aa80f41ee6df8995ae44044caf7a024b128", "parents": ["1186e4f737ee4e991864fedbe5345e13dd41819f"], "tags": ["FIREFOX_58_0_BUILD6", "FIREFOX_58_0_RELEASE"]}], "date": 1516312448, "user": "ryanvm@gmail.com"}}
}";