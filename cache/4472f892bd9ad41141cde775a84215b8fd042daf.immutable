s:12839:"{
"lastpushid": 2841,
"pushes": {"2832": {"changesets": [{"author": "Emilio Cobos \u00c1lvarez \u003cemilio@crisal.io\u003e", "branch": "default", "desc": "Bug 1765685 - Ensure customization mode is opaque. r=dao,a=dsmith\n\nThe Linux compositor relies on the tab area being fully opaque, all the\ntime. This I'm almost sure also fixes bug 1762379, since alpenglow also\nhas a semi-transparent toolbar-bgcolor.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144261", "files": ["browser/themes/shared/customizableui/customizeMode.css"], "node": "bd6f016a0c5d8e10b35f596e75790aacf5a0eba1", "parents": ["bad8853d0c215d636a2d58526a1a4013f3c22c8e"], "tags": []}, {"author": "Lee Salzman \u003clsalzman@mozilla.com\u003e", "branch": "default", "desc": "Bug 1766056 - Fix YUV color matrix for SWGL slow and fast paths. r=jrmuizel,a=dsmith\n\nThe brush_yuv_image slow path expected a YUV color matrix that applies scaling,\nwhereas we set up a matrix for SWGL that had no scaling to support the fast path.\nTo work around the fact that both paths have different scaling requirements, we\npass the matrix with scaling down to the fast path and undo the scaling later\nwhen constructing SWGL's internal YUVMatrix from it. This allows both paths to\njust use the same matrix and avoids the footgun.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144479", "files": ["dom/media/test/reftest/color_quads/reftest.list", "gfx/wr/swgl/src/composite.h", "gfx/wr/swgl/src/swgl_ext.h", "gfx/wr/webrender/res/brush_yuv_image.glsl", "gfx/wr/webrender/res/composite.glsl"], "node": "1fae4668b97e881f04f0d6aa688753f01ce74d45", "parents": ["bd6f016a0c5d8e10b35f596e75790aacf5a0eba1"], "tags": []}, {"author": "Brad Werth \u003cbwerth@mozilla.com\u003e", "branch": "default", "desc": "Bug 1766298: Report video-dynamic-range: high on macOS 11+. r=gfx-reviewers,jrmuizel,a=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144612", "files": ["widget/cocoa/nsLookAndFeel.mm"], "node": "fb6e52582c3d5a4100ac862541c5e7f9f81b5393", "parents": ["1fae4668b97e881f04f0d6aa688753f01ce74d45"], "tags": []}], "date": 1650917659, "user": "dsmith@mozilla.com"}, "2833": {"changesets": [{"author": "Agi Sferro \u003cagi@sferro.dev\u003e", "branch": "default", "desc": "Bug 1766127 - Disable GPU process in fx100. r=aosmond, a=dsmith\n\nGiven that we found Bug 1766127 so late in the beta cycle, let's disable the\nGPU process for one more version, the GPU process will ride the trains on 101\ninstead.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144617", "files": ["modules/libpref/init/StaticPrefList.yaml"], "node": "bcf19cbec5bbd223a8798fcd387d3407cc9f0be8", "parents": ["fb6e52582c3d5a4100ac862541c5e7f9f81b5393"], "tags": ["FIREFOX_100_0_BUILD1"]}], "date": 1650920669, "user": "dsmith@mozilla.com"}, "2834": {"changesets": [{"author": "Mozilla Releng Treescript \u003crelease+treescript@mozilla.org\u003e", "branch": "default", "desc": "No bug - Tagging bcf19cbec5bbd223a8798fcd387d3407cc9f0be8 with FIREFOX_100_0_BUILD1 a=release CLOSED TREE DONTBUILD", "files": [".hgtags"], "node": "0feb7c8ff2f5c87d37880a1d208cc60e84f7c5a4", "parents": ["bcf19cbec5bbd223a8798fcd387d3407cc9f0be8"], "tags": []}], "date": 1650929908, "user": "ffxbld"}, "2835": {"changesets": [{"author": "Jamie Nicol \u003cjnicol@mozilla.com\u003e", "branch": "default", "desc": "Bug 1766127 - Allow AndroidCompositorWidget::mClientSize to be updated from main thread. r=agi, a=dsmith\n\n\nOn Android we have long since calculated the compositor widget size\nfrom the Surface rather than using the main thread widget size. This\nis to avoid a trip via the main thread in response to a\nResumeAndResize event on the UI thread.\nAndroidCompositorWidget::mClientSize therefore gets calculated when\nthe compositor is resumed.\n\nHowever, it is possible in some circumstances for the compositor to\nreceive a display list prior to it being resumed. In this bug's case,\nSyncResumeAndResize is getting called before the UI thread has been\nnotified that the compositor has been initialized. It therefore cannot\nresume the compositor, and we instead resume the compositor on the\nsubsequent NotifyCompositorCreated call. This starts a race between\nthe main thread paint and NotifyCompositorCreated being scheduled on\nthe UI thread then resuming the compositor via\nPUiCompositorController. If we receive\nWebRenderBridgeParent::RecvSetDisplayList prior to\nUiCompositorControllerParent::RecvResumeAndResize, then\nAndroidCompositorWidget::mClientSize will be zero. This results in us\nsetting zero-sized webrender scene rect, leading to webrender exiting\nearly during rendering, resulting in a black screen.\n\nTo fix this, allow the main thread to set the AndroidCompositorWidget\nsize, in addition to the UI thread being able to set it. We do so by\nadding a NotifyClientSizeChanged method to\nPlatformCompositorWidgetDelegate, called from\nnsWindow::OnSizeChanged. The cross-process implementation of this uses\nan IPDL call on PCompositorWidget, which shares a top-level protocol\nwith PWebRenderBridge, meaning calls are guaranteed to occur in\norder. This means a resize event on the main thread is guaranteed to\nset the CompositorWidget size before the display list from the\nsubsequent paint is received.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144687", "files": ["widget/android/AndroidCompositorWidget.cpp", "widget/android/AndroidCompositorWidget.h", "widget/android/CompositorWidgetChild.cpp", "widget/android/CompositorWidgetChild.h", "widget/android/CompositorWidgetParent.cpp", "widget/android/CompositorWidgetParent.h", "widget/android/InProcessAndroidCompositorWidget.cpp", "widget/android/InProcessAndroidCompositorWidget.h", "widget/android/PCompositorWidget.ipdl", "widget/android/nsWindow.cpp"], "node": "58dc68076b445ba22696471abdaab5861956dd42", "parents": ["0feb7c8ff2f5c87d37880a1d208cc60e84f7c5a4"], "tags": []}, {"author": "Jed Davis \u003cjld@mozilla.com\u003e", "branch": "default", "desc": "Bug 1759196 - Fix the Linux sandbox's handling of 32-bit arguments on 64-bit platforms. r=gcp,a=dsmith\n\n[Beta uplift version; previously r=gcp,bobowen]\n\nBackground: When 32-bit types are passed in registers on x86-64 (and\nprobably other platforms?), the function call ABI does not specify the\ncontents of the upper half, and the Linux kernel syscall ABI appears to\nhave the same behavior.\n\nIn practice, the upper half is usually zero (or maybe sign-extended from\nthe lower half), because 64-bit operations aren't cheaper than 32-bit,\nand 32-bit operations zero-extend their outputs; therefore, this case\nusually doesn't happen in the first place, and any kind of spill or\nregister move will zero the upper half.  However, arbitrary values are\npossible, and a case like this has occurred with the Firefox profiler\nusing `clock_gettime`.  (This paragraph is applicable to x86-64 and\nARM64; other 64-bit architecutures may behave differently.)\n\nBut the Chromium seccomp-bpf compiler, when testing the value of a 32-bit\nargument on a 64-bit platform, requires that the value be zero-extended\nor sign-extended, and (incorrectly, as far as I can tell) considers\nanything else an ABI violation.\n\nWith this patch, when that case is detected, we use the `SIGSYS` handler\nto zero-extend the problematic argument and re-issue the syscall.\n\n(It would also be possible to just ignore the upper half, and that would\nbe faster, but that could lead to subtle security holes if the type\nused in `bpf_dsl` is incorrect and the kernel really does treat it as\n64-bit.)\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144642", "files": ["security/sandbox/chromium-shim/patches/after_update/linux_32bit_arg_fixup.patch", "security/sandbox/chromium-shim/patches/after_update/patch_order.txt", "security/sandbox/chromium/sandbox/linux/bpf_dsl/policy_compiler.cc", "security/sandbox/chromium/sandbox/linux/bpf_dsl/policy_compiler.h", "security/sandbox/common/test/SandboxTestingChildTests.h", "security/sandbox/linux/SandboxFilter.cpp"], "node": "e96c93767d18b19f2397471f87aa770b5f160d22", "parents": ["58dc68076b445ba22696471abdaab5861956dd42"], "tags": []}, {"author": "Barret Rennie \u003cbarret@brennie.ca\u003e", "branch": "default", "desc": "Bug 1766430 - Allow additional properties in Spotlight content r=Mardak,a=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144722", "files": ["browser/components/newtab/content-src/asrouter/templates/OnboardingMessage/Spotlight.schema.json", "browser/components/newtab/lib/PanelTestProvider.jsm"], "node": "7698c74db11bd501a9670ca187b237d31cf2a269", "parents": ["e96c93767d18b19f2397471f87aa770b5f160d22"], "tags": []}, {"author": "James Teh \u003cjteh@mozilla.com\u003e", "branch": "default", "desc": "Bug 1761469: BrowserHost::GetTopLevelDocAccessible: Return null if mRoot is null. r=eeejay,a=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D142186", "files": ["dom/ipc/BrowserHost.cpp"], "node": "ca59cea1ddc60d4e649ab730570cb8bde4e6e629", "parents": ["7698c74db11bd501a9670ca187b237d31cf2a269"], "tags": []}, {"author": "Brad Werth \u003cbwerth@mozilla.com\u003e", "branch": "default", "desc": "Bug 1763781 Part 1: Force FFmpegVideoDecoder to use MacIOSurfaceImage for HDR video. r=media-playback-reviewers,alwu,a=dsmtih\n\nThis change ensures that macOS will correctly detect the surface as a video\nand use an HDR-capable display layer. Unfortunately, it invokes a slower code\npath for this case. Bug 1765388 may restore this fast path for HDR video.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144039", "files": ["dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp"], "node": "593471ee11be31828d8d42b2c57865ce04ed9c7d", "parents": ["ca59cea1ddc60d4e649ab730570cb8bde4e6e629"], "tags": []}], "date": 1651068381, "user": "dsmith@mozilla.com"}, "2836": {"changesets": [{"author": "Brad Werth \u003cbwerth@mozilla.com\u003e", "branch": "default", "desc": "Bug 1763781: Fx100 RC2 Update test expectations. r=gfx-reviewers,a=dsmith\n\n\nThis is a modified version of D144228 that should merge to the Fx100 RC2.\n\nThis gives us better correctness for 10-bit vp9 reftests. In the WPTs, we\nturn off some tests on macos because of the difficulty that our\nscreenshots have in analyzing srgb image data. It seems to consistently\nreport 191,255,191,73 when we are expecting 255,0,0,255.\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144869", "files": ["dom/media/test/reftest/color_quads/reftest.list", "testing/web-platform/meta/html/canvas/element/manual/wide-gamut-canvas/canvas-display-p3-drawImage-ImageBitmap-video.html.ini", "testing/web-platform/meta/html/canvas/element/manual/wide-gamut-canvas/canvas-display-p3-drawImage-video.html.ini"], "node": "54538a6f60bb89abd2c286bf0343171a8d5d5609", "parents": ["593471ee11be31828d8d42b2c57865ce04ed9c7d"], "tags": []}], "date": 1651085279, "user": "dsmith@mozilla.com"}, "2837": {"changesets": [{"author": "ffxbld \u003cffxbld@mozilla.com\u003e", "branch": "default", "desc": "No Bug, mozilla-release repo-update remote-settings - a=repo-update,r=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144909", "files": ["services/settings/dumps/blocklists/addons-bloomfilters.json", "services/settings/dumps/main/password-rules.json", "services/settings/dumps/main/websites-with-shared-credential-backends.json", "services/settings/dumps/security-state/intermediates.json"], "node": "220a9da0b77c8ece89b9c9059a898473d0de0786", "parents": ["54538a6f60bb89abd2c286bf0343171a8d5d5609"], "tags": []}, {"author": "Ryan VanderMeulen \u003cryanvm@gmail.com\u003e", "branch": "default", "desc": "Bug 1766853 - Upgrade to SQLite 3.38.3. r=mak,a=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144962", "files": ["third_party/sqlite3/src/sqlite3.c", "third_party/sqlite3/src/sqlite3.h"], "node": "b00d789f02bc2ec906190c0b858af6910c9a8396", "parents": ["220a9da0b77c8ece89b9c9059a898473d0de0786"], "tags": []}, {"author": "Kagami Sascha Rosylight \u003ckrosylight@mozilla.com\u003e", "branch": "default", "desc": "Bug 1764222 - Use NS_IMPL_CYCLE_COLLECTION_WITH_JS_MEMBERS for piping classes r=smaug,a=dsmith\n\nDifferential Revision: https://phabricator.services.mozilla.com/D144886", "files": ["dom/streams/ReadableStreamPipeTo.cpp", "dom/streams/TeeState.cpp", "dom/streams/crashtests/1764222.html", "dom/streams/crashtests/crashtests.list", "testing/crashtest/crashtests.list"], "node": "1c7f7adc90e2b4c8d64548938bb1499033c5be8f", "parents": ["b00d789f02bc2ec906190c0b858af6910c9a8396"], "tags": ["FIREFOX_100_0_BUILD2", "FIREFOX_100_0_RELEASE"]}], "date": 1651174047, "user": "dsmith@mozilla.com"}}
}";